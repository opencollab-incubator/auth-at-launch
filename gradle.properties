##################################
# authatlaunch gradle properties #
##################################
# Configuration Reference:
# https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_configuration_properties

# JVM Args for workers and spawned gradle processes within project
org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

# Build cache (cacheable tasks in execution phase)
# https://docs.gradle.org/current/userguide/build_cache.html
# Currently enabled and configured to use remote Build Cache node
org.gradle.caching=false
org.gradle.caching.debug=false

# Configuration-on-demand (only configure what we are executing)
# https://docs.gradle.org/current/userguide/multi_project_configuration_and_execution.html
org.gradle.configureondemand=false

# Configuration cache (cacheable tasks in configuration phase)
# https://docs.gradle.org/current/userguide/configuration_cache.html
# Currently disabled as reported to cause issues with builds
# TODO not tried out in this project
org.gradle.configuration-cache=false
# There are additional properties to configure how many cache warnings are permitted

# Isolated projects
# https://docs.gradle.org/current/userguide/isolated_projects.html
# Currently disabled, we do not support this
# Kotlin extensions seem to cause issues
org.gradle.unsafe.isolated-projects=false
# There are additional properties to configure invalidation of coupled projects

# VFS Configuration
# https://docs.gradle.org/current/userguide/file_system_watching.html
org.gradle.vfs.watch=true
org.gradle.vfs.verbose=false
#kotlin.incremental.useClasspathSnapshot=true

# Parallel Execution
# https://docs.gradle.org/current/userguide/performance.html#parallel_execution
org.gradle.parallel=true

# Use Gradle Daemon
# https://docs.gradle.org/current/userguide/gradle_daemon.html
org.gradle.daemon=true

# Console Output
# https://docs.gradle.org/current/userguide/command_line_interface.html#sec:command_line_logging
org.gradle.console=auto
#org.gradle.logging.level=lifecycle
